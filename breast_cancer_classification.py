# -*- coding: utf-8 -*-
"""Breast Cancer Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m-vwMW8FcJzBLBm75R4lz0nWQZGIY9Ht

Importing the Dependencies
"""

import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Collection an Preprocessing"""

dataframe=sklearn.datasets.load_breast_cancer()
print(dataframe)
data_frame=pd.DataFrame(dataframe.data,columns=dataframe.feature_names )
data_frame['target']=dataframe.target

#loading dataset into dataframe
breast_cancer_data=pd.read_csv('/content/data.csv')

#first five rows
breast_cancer_data.head()

breast_cancer_data.drop(columns=['Unnamed: 32'], inplace=True)

breast_cancer_data['labels']=data_frame['target']

breast_cancer_data.head()

"""Analysis"""

breast_cancer_data.shape

breast_cancer_data.info()

breast_cancer_data.isnull().sum()

breast_cancer_data['labels'].value_counts()

"""1 --> Benign

2 --> Maligant

Separating the features and the target columns
"""

X= breast_cancer_data.drop(columns=['labels','id','diagnosis'],axis=1)
Y=breast_cancer_data['labels']

"""Splitting the data into training an testing data"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

"""Model Training"""

model=LogisticRegression()

#training the model on X and Y
model.fit(X_train,Y_train)

"""Accuracy Score

"""

X_train_predicton=model.predict(X_train)
training_data_accuracy=accuracy_score(Y_train,X_train_predicton)
print('Accuracy on training data:',training_data_accuracy)

X_test_predicton=model.predict(X_test)
testing_data_accuracy=accuracy_score(Y_test,X_test_predicton)
print('Accuracy on testing data:',testing_data_accuracy)

